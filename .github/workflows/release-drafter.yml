name: Release Drafter

on:
  push:
    branches:
      - main # main 브랜치에 푸시될 때 실행
  pull_request:
    types: [closed] # PR이 병합될 때 실행

jobs:
  update-release-draft:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Release Drafter
        uses: release-drafter/release-drafter@v5

  publish-release:
    needs: update-release-draft # 이전 Job이 완료된 후 실행
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Publish Release
        uses: actions/github-script@v6
        with:
          script: |
            const draftReleases = await github.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            const latestDraft = draftReleases.data.find(release => release.draft);
            if (!latestDraft) {
              console.log("No draft release found.");
              return;
            }

            await github.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: latestDraft.id,
              draft: false, // Draft 상태 해제 (자동 게시)
            });

            console.log(`Published release: ${latestDraft.name}`);
